// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DevDependencies /> should be consistent with snapshot 1`] = `
<React.Fragment>
  <p>
    If you are familiar with create-react-app, you would know
     
    <ExternalLink
      to="https://www.npmjs.com/package/react-scripts"
    >
      react-scripts
    </ExternalLink>
     is where the all the magics are hidden.
  </p>
  <p>
    But sometimes we'd like it to be configurable, that's why
     
    <ExternalLink
      to="https://github.com/timarney/react-app-rewired"
    >
      react-app-rewired
    </ExternalLink>
     is introduced to 'rewire' it's configuration.
  </p>
  <p>
    Especially, 
    <ExternalLink
      to="https://www.npmjs.com/package/react-app-rewire-less"
    >
      react-app-rewire-less
    </ExternalLink>
     lets you use less with antd.
  </p>
  <p>
    In chrome dev tool, chrome extension 
    <ExternalLink
      to="https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd"
    >
      redux-devtools-extension
    </ExternalLink>
     can help you track all redux state changes.
  </p>
  <p>
    Upon commit message is written, 
    <ExternalLink
      to="http://marionebl.github.io/commitlint/#/"
    >
      @commitlint/cli
    </ExternalLink>
     and
     
    <ExternalLink
      to="https://www.npmjs.com/package/@commitlint/config-conventional"
    >
      @commitlint/config-conventional
    </ExternalLink>
     can check your commit message.
  </p>
  <p>
    Before any commit, 
    <ExternalLink
      to="https://github.com/okonet/lint-staged"
    >
      lint-staged
    </ExternalLink>
     runs lints for git-staged files only.
  </p>
  <p>
    We use 
    <ExternalLink
      to="https://prettier.io/"
    >
      prettier
    </ExternalLink>
     to lint js and 
    <ExternalLink
      to="https://stylelint.io/"
    >
      stylelint
    </ExternalLink>
     with
     
    <ExternalLink
      to="https://github.com/stylelint/stylelint-config-standard"
    >
      stylelint-config-standard
    </ExternalLink>
     for css(less).
  </p>
  <p>
    Before any push, tests must pass which are using 
    <ExternalLink
      to="https://npmjs.com/package/react-test-renderer"
    >
      react-test-renderer
    </ExternalLink>
    ,
     
    <ExternalLink
      to="http://airbnb.io/enzyme/"
    >
      enzyme
    </ExternalLink>
     and 
    <ExternalLink
      to="https://www.npmjs.com/package/enzyme-adapter-react-16"
    >
      enzyme-adapter-react-16
    </ExternalLink>
  </p>
  <p>
    Above git-hooks (commitmsg, precommit, prepush) are supported by
     
    <ExternalLink
      to="https://github.com/typicode/husky"
    >
      husky
    </ExternalLink>
  </p>
  <p>
    After build, 
    <ExternalLink
      to="https://github.com/tschaub/gh-pages"
    >
      gh-pages
    </ExternalLink>
     can help you deploy project on github pages.
  </p>
  <p>
    Static type checking is supported by adding 
    <ExternalLink
      to="https://flow.org/"
    >
      flow-bin
    </ExternalLink>
    .
  </p>
  <p>
    <ExternalLink
      to="https://github.com/adriantoine/enzyme-to-json"
    >
      Enzyme-to-json
    </ExternalLink>
     helps serialize EnzymeWrapper, so you can snapshot it with jest.
  </p>
  <p>
    Snapshoting HOC-style components can be annoying, but not with
     
    <ExternalLink
      to="https://github.com/Stupidism/enzyme-shallow-until"
    >
      enzyme-shallow-until
    </ExternalLink>
    .
  </p>
  <p>
    To analyze bundle size, use npm script analyze which uses
     
    <ExternalLink
      to="https://www.npmjs.com/package/source-map-explorer"
    >
      source-map-explorer
    </ExternalLink>
    .
  </p>
  <p>
    Under the protection of 
    <ExternalLink
      to="https://github.com/ant-design/babel-plugin-import"
    >
      babel-plugin-import
    </ExternalLink>
     and
     
    <ExternalLink
      to="https://github.com/lodash/babel-plugin-lodash"
    >
      babel-plugin-lodash
    </ExternalLink>
    , import antd, lodash and recompose will not cause any size problem.
  </p>
</React.Fragment>
`;
